<?xml version="1.0"?>
<project
  name="Velocity"
  default="velocity">

  <description>
    Velocity - Integration of SchemaCrawler with Apache Velocity.
  </description>
  <property environment="env"/>

  <!-- Step 1.
    Define the ant tasks (macros) that come with SchemaCrawler
  -->
  <typedef
    resource="schemacrawler-antlib.xml"
    classpath="../schemacrawler-8.0.jar"/>

  <!-- Step 2.
    Get Velocity and dependencies
  -->
  <mkdir dir="../lib"/>
  <get
    src="http://www.ibiblio.org/maven/velocity/jars/velocity-1.5.jar"
    dest="../lib/velocity-1.5.jar"
    verbose="true"
    usetimestamp="true"/>
  <get
    src="http://www.ibiblio.org/maven/commons-collections/jars/commons-collections-3.2.jar"
    dest="../lib/commons-collections-3.2.jar"
    verbose="true"
    usetimestamp="true"/>
  <get
    src="http://www.ibiblio.org/maven/commons-lang/jars/commons-lang-2.3.jar"
    dest="../lib/commons-lang-2.3.jar"
    verbose="true"
    usetimestamp="true"/>

  <!-- Step 3.
    Define the classpath to the database driverand to Velocity
  -->
  <path id="velocity-classpath">
    <!-- SchemaCrawler jar, and database driver jar -->
    <fileset dir="..">
      <include name="*.jar"/>
    </fileset>
     <!-- Velocity jars -->
    <fileset dir="../lib">
      <include name="*.jar"/>
    </fileset>
  </path>

  <!-- Step 4.
    Define an ant task that uses the <schemacrawler-velocity> macro
  -->
  <target name="velocity">

    <property
      name="velocity-template"
      location="tables.vm"/>
    <property
      name="outputfile"
      location="table-script-by-velocity.sql"/>

    <delete file="${outputfile}"/>

    <schemacrawler
      datasource="hsqldb"
      db-driver-classpath="velocity-classpath"
      command="velocity"
      outputformat="${velocity-template}"
      outputfile="${outputfile}"/>

    <echo message="Output is in ${outputfile}"/>

  </target>

</project>
