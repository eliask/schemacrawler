<?xml version="1.0" encoding="UTF-8"?>
  <!--
    /* * * SchemaCrawler * http://sourceforge.net/projects/schemacrawler * Copyright (c) 2000-2011, Sualeh Fatehi. * *
    This library is free software; you can redistribute it and/or modify it under the terms * of the GNU Lesser General
    Public License as published by the Free Software Foundation; * either version 2.1 of the License, or (at your
    option) any later version. * * This library is distributed in the hope that it will be useful, but WITHOUT ANY
    WARRANTY; * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. * See the GNU
    Lesser General Public License for more details. * * You should have received a copy of the GNU Lesser General Public
    License along with this * library; if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330,
    * Boston, MA 02111-1307, USA. * */
  -->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">

  <bean id="datasource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
    <property name="driverClassName">
      <value>org.hsqldb.jdbcDriver</value>
    </property>
    <property name="url">
      <value>jdbc:hsqldb:hsql://localhost/schemacrawler</value>
    </property>
    <property name="username">
      <value>sa</value>
    </property>
    <property name="password">
      <value></value>
    </property>
  </bean>

  <bean id="schemaCrawlerOptions" class="schemacrawler.schemacrawler.SchemaCrawlerOptions">
    <property name="alphabeticalSortForTableColumns" value="true" />
    <property name="alphabeticalSortForProcedureColumns" value="true" />
    <property name="alphabeticalSortForIndexes" value="true" />
    <property name="alphabeticalSortForForeignKeys" value="true" />
    <property name="tableInclusionRule">
      <bean class="schemacrawler.schemacrawler.InclusionRule">
        <constructor-arg value=".*" />
        <constructor-arg value="" />
      </bean>
    </property>
    <property name="columnInclusionRule">
      <bean class="schemacrawler.schemacrawler.InclusionRule">
        <constructor-arg value=".*" />
        <constructor-arg value="" />
      </bean>
    </property>
    <property name="tableTypesString">
      <value>TABLE,VIEW</value>
    </property>
    <property name="informationSchemaViews" ref="informationSchemaViews" />
    <property name="schemaInfoLevel">
      <bean factory-method="maximum" class="schemacrawler.schemacrawler.SchemaInfoLevel" />
    </property>
  </bean>

  <bean id="outputOptions" class="schemacrawler.tools.options.OutputOptions">
    <property name="appendOutput" value="false" />
    <property name="noFooter" value="true" />
    <property name="noHeader" value="true" />
    <property name="noInfo" value="true" />
    <property name="outputFormatValue" value="text" />
    <property name="outputFileName" value="scOutput.txt" />
  </bean>

  <bean id="informationSchemaViews" class="schemacrawler.schemacrawler.InformationSchemaViews">
    <property name="routinesSql">
      <value>
        <![CDATA[              
            SELECT 
              *
            FROM 
              INFORMATION_SCHEMA.ROUTINES 
            ORDER BY 
              ROUTINE_CATALOG, 
              ROUTINE_SCHEMA, 
              ROUTINE_NAME
            ]]>
      </value>
    </property>
    <property name="viewsSql">
      <value>
        <![CDATA[
            SELECT 
              * 
            FROM 
              INFORMATION_SCHEMA.VIEWS 
            ORDER BY 
              TABLE_CATALOG, 
              TABLE_SCHEMA, 
              TABLE_NAME
            ]]>
      </value>
    </property>
    <property name="triggersSql">
      <value>
        <![CDATA[
            SELECT 
              * 
            FROM 
              INFORMATION_SCHEMA.TRIGGERS
            ORDER BY
              TRIGGER_CATALOG,
              TRIGGER_SCHEMA,
              TRIGGER_NAME
            ]]>
      </value>
    </property>
    <property name="tableConstraintsSql">
      <value>
        <![CDATA[
            SELECT 
              * 
            FROM 
              INFORMATION_SCHEMA.TABLE_CONSTRAINTS
            ORDER BY
              CONSTRAINT_CATALOG,
              CONSTRAINT_SCHEMA,
              CONSTRAINT_NAME
            ]]>
      </value>
    </property>
    <property name="checkConstraintsSql">
      <value>
        <![CDATA[
            SELECT 
              * 
            FROM 
              INFORMATION_SCHEMA.CHECK_CONSTRAINTS
            ORDER BY
              CONSTRAINT_CATALOG,
              CONSTRAINT_SCHEMA,
              CONSTRAINT_NAME
            ]]>
      </value>
    </property>
  </bean>

  <bean id="executableForSchema" class="schemacrawler.tools.text.schema.SchemaTextExecutable">
    <constructor-arg value="schema" />
    <property name="schemaCrawlerOptions" ref="schemaCrawlerOptions" />
    <property name="schemaTextOptions">
      <bean class="schemacrawler.tools.text.schema.SchemaTextOptions">
        <property name="showOrdinalNumbers" value="true" />
        <property name="showStandardColumnTypeNames" value="true" />
        <property name="hidePrimaryKeyNames" value="false" />
        <property name="hideIndexNames" value="false" />
        <property name="hideForeignKeyNames" value="false" />
        <property name="hideConstraintNames" value="false" />
      </bean>
    </property>
    <property name="outputOptions" ref="outputOptions" />
  </bean>

  <bean id="executableForQuery" class="schemacrawler.tools.text.operation.OperationExecutable">
    <constructor-arg value="select.tables" />
    <property name="schemaCrawlerOptions" ref="schemaCrawlerOptions" />
    <property name="operationOptions">
      <bean class="schemacrawler.tools.text.operation.OperationOptions">
        <property name="showLobs" value="true" />
        <property name="mergeRows" value="true" />
      </bean>
    </property>
    <property name="additionalConfiguration">
      <bean class="schemacrawler.schemacrawler.Config">
        <constructor-arg>
          <map>
            <entry key="select.tables" value="SELECT * FROM INFORMATION_SCHEMA.SYSTEM_TABLES" />
          </map>
        </constructor-arg>
      </bean>
    </property>
    <property name="outputOptions" ref="outputOptions" />
  </bean>

  <bean id="executableForQueryOver" class="schemacrawler.tools.text.operation.OperationExecutable">
    <constructor-arg value="select" />
    <property name="schemaCrawlerOptions" ref="schemaCrawlerOptions" />
    <property name="operationOptions">
      <bean class="schemacrawler.tools.text.operation.OperationOptions">
        <property name="showLobs" value="true" />
      </bean>
    </property>
    <property name="additionalConfiguration">
      <bean class="schemacrawler.schemacrawler.Config">
        <constructor-arg>
          <map>
            <entry key="select" value="SELECT * FROM ${table}" />
          </map>
        </constructor-arg>
      </bean>
    </property>
    <property name="outputOptions" ref="outputOptions" />
  </bean>

  <bean id="executableForCount" class="schemacrawler.tools.executable.SchemaCrawlerExecutable">
    <constructor-arg value="count" />
    <property name="schemaCrawlerOptions" ref="schemaCrawlerOptions" />
    <property name="outputOptions" ref="outputOptions" />
  </bean>

  <bean id="executableForGraph" class="schemacrawler.tools.executable.SchemaCrawlerExecutable">
    <constructor-arg value="graph" />
    <property name="schemaCrawlerOptions" ref="schemaCrawlerOptions" />
    <property name="outputOptions">
      <bean class="schemacrawler.tools.options.OutputOptions">
        <property name="outputFormatValue" value="dot" />
      </bean>
    </property>
  </bean>

  <bean id="executableForVelocity" class="schemacrawler.tools.executable.SchemaCrawlerExecutable">
    <constructor-arg value="velocity" />
    <property name="schemaCrawlerOptions" ref="schemaCrawlerOptions" />
    <property name="outputOptions">
      <bean class="schemacrawler.tools.options.OutputOptions">
        <property name="outputFormatValue" value="plaintextschema.vm" />
      </bean>
    </property>
  </bean>

  <bean id="executableForFreeMarker" class="schemacrawler.tools.executable.SchemaCrawlerExecutable">
    <constructor-arg value="freemarker" />
    <property name="schemaCrawlerOptions" ref="schemaCrawlerOptions" />
    <property name="outputOptions">
      <bean class="schemacrawler.tools.options.OutputOptions">
        <property name="outputFormatValue" value="plaintextschema.ftl" />
      </bean>
    </property>
  </bean>

  <bean id="executableForJavaScript" class="schemacrawler.tools.executable.SchemaCrawlerExecutable">
    <constructor-arg value="script" />
    <property name="schemaCrawlerOptions" ref="schemaCrawlerOptions" />
    <property name="outputOptions">
      <bean class="schemacrawler.tools.options.OutputOptions">
        <property name="outputFormatValue" value="plaintextschema.js" />
      </bean>
    </property>
  </bean>

  <bean id="executableForXMLSerialization" class="schemacrawler.tools.executable.SchemaCrawlerExecutable">
    <constructor-arg value="serialize" />
    <property name="schemaCrawlerOptions" ref="schemaCrawlerOptions" />
    <property name="outputOptions">
      <bean class="schemacrawler.tools.options.OutputOptions">
        <property name="outputFormatValue" value="xml" />
      </bean>
    </property>
  </bean>
  
</beans>
