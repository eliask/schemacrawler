# --=----=----=----=----=----=----=----=----=----=----=----=----=----=----=----=
# ------------------------------- SchemaCrawler --------------------------------
# --=----=----=----=----=----=----=----=----=----=----=----=----=----=----=----=
# SchemaCrawler is a platform (both operating system and database system)
# independent  command-line tool to output your database schema and data in a
# readable form. The output is designed to be diff-ed with previous versions of
# your database schema.

# --=----=----=----=----=----=----=----=----=----=----=----=----=----=----=----=
# SchemaCrawler Options
# --=----=----=----=----=----=----=----=----=----=----=----=----=----=----=----=

# Filtering Options
# ------------------------------------------------------------------------------

# Regular expression table and column name pattern to filter table
# and column names
# Column regular expression to match fully qualified column names, 
# in the form "SCHEMANAME.TABLENAME.COLUMNNAME"
# Default: .* for include, <none> for exclude
schemacrawler.table.pattern.include=.*
schemacrawler.table.pattern.exclude=
schemacrawler.column.pattern.include=.*
schemacrawler.column.pattern.exclude=

# Regular expression procedure and procedure parameter name pattern to 
# procedure and procedure parameter names
# Default: .* for include, <none> for exclude
schemacrawler.procedure.pattern.include=.*
schemacrawler.procedure.pattern.exclude=
schemacrawler.procedure.inout.pattern.include=.*
schemacrawler.procedure.inout.pattern.exclude=

# Grep Options
# ------------------------------------------------------------------------------

schemacrawler.grep.column.pattern.exclude=
schemacrawler.grep.column.pattern.include=.*
schemacrawler.grep.procedure.inout.pattern.exclude=
schemacrawler.grep.procedure.inout.pattern.include=.*

schemacrawler.grep.invert-match=false

# Sorting Options
# ------------------------------------------------------------------------------
  
# Sort orders for objects that are not sorted by name by default
schemacrawler.format.sort_alphabetically.table_columns=false
schemacrawler.format.sort_alphabetically.table_foreignkeys=false
schemacrawler.format.sort_alphabetically.table_indices=false
schemacrawler.format.sort_alphabetically.procedure_columns=false

# --=----=----=----=----=----=----=----=----=----=----=----=----=----=----=----=
# Text Formatting Options
# --=----=----=----=----=----=----=----=----=----=----=----=----=----=----=----=

# Shows all object names with the catalog and schema names, for easier comparison
# across different schemas
# Default: false
schemacrawler.format.show_unqualified_names=false

# Shows standard column names instead of database specific column names
# Default: false
schemacrawler.format.show_standard_column_type_names=false

# Shows ordinal numbers for columns
# Default: false
schemacrawler.format.show_ordinal_numbers=false

# Hides primary key, foreign key, index and check constraint names
# Default: false
schemacrawler.format.hide_primarykey_names=false
schemacrawler.format.hide_foreignkey_names=false
schemacrawler.format.hide_index_names=false
schemacrawler.format.hide_constraint_names=false

# --=----=----=----=----=----=----=----=----=----=----=----=----=----=----=----=
# Data Output Options
# --=----=----=----=----=----=----=----=----=----=----=----=----=----=----=----=

# Whether to merge rows that differ only in the last column
# Default: false
schemacrawler.data.merge_rows=false

# Whether to show data from CLOB and BLOB objects
# Default: false
schemacrawler.data.show_lobs=false

# --=----=----=----=----=----=----=----=----=----=----=----=----=----=----=----=
# Queries
# --=----=----=----=----=----=----=----=----=----=----=----=----=----=----=----=

hsqldb.tables=SELECT * FROM INFORMATION_SCHEMA.SYSTEM_TABLES
tables.select=SELECT ${columns} FROM ${table} ORDER BY ${columns}
tables.drop=DROP ${tabletype} ${table}
