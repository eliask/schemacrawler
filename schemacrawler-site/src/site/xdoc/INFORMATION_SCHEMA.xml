<!DOCTYPE document PUBLIC "-//Apache Software Foundation//DTD XDOC 1.0//EN"
  "http://maven.apache.org/dtd/xdoc_1_0.dtd">
<document>
  <properties>
    <title>INFORMATION_SCHEMA</title>
    <author email="sualeh@hotmail.com">Sualeh Fatehi</author>
  </properties>
  <body>
    <section name="INFORMATION_SCHEMA Views">
      <subsection name="Enhancing SchemaCrawler Output">
        <p>
          SchemaCrawler can display view and procedure definitions,
          trigger information, and check constaints by using data from
          the INFORMATION_SCHEMA views. Even though INFORMATION_SCHEMA
          views are defined in the SQL Standard, not all database
          systems provide these views. However, if it is possible to
          construct a metadata view with columns that match the
          INFORMATION_SCHEMA views, then SchemaCrawler can use the data
          to obtain view and procedure definitions, trigger information,
          and check constaints. The INFORMATION_SCHEMA views currently
          processed by SchemaCrawler are shown below.
        </p>
        <p>
          To get SchemaCrawler to use the views you will need to modify
          your database connection properties in your SchemaCrawler
          configuration file. Some examples are provided in the
          <code>schemacrawler.config.properties</code>
          file in the
          <code>_distrib</code>
          folder of the download.
        </p>
        <p>
          For example, if you had defined a connection called
          <code>hsqldb</code>
          , going against the HSQLDB database, and wanted to get view
          definitions in the schema output, you would create a property
          in your
          <code>schemacrawler.config.properties</code>
          file like this:
        </p>
        <source>
          <![CDATA[        
hsqldb.select.INFORMATION_SCHEMA.VIEWS=\
  SELECT \
    * \
  FROM \
    INFORMATION_SCHEMA.SYSTEM_VIEWS
]]>
        </source>
      </subsection>
      <subsection name="INFORMATION_SCHEMA.VIEWS">
        <table>
          <thead>
            <tr>
              <th>Column name</th>
              <th>Description</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>TABLE_CATALOG</td>
              <td>The name of the catalog containing the view.</td>
            </tr>
            <tr>
              <td>TABLE_SCHEMA</td>
              <td>The name of the schema containing the view.</td>
            </tr>
            <tr>
              <td>TABLE_NAME</td>
              <td>The name of the view.</td>
            </tr>
            <tr>
              <td>VIEW_DEFINITION</td>
              <td>
                The definition of the view as it would appear in a
                CREATE VIEW statement. If it does not fit, the value is
                NULL.
              </td>
            </tr>
            <tr>
              <td>CHECK_OPTION</td>
              <td>
                One of: CASCADED = if WITH CHECK OPTION was specified in
                the CREATE VIEW statement that created the view; NONE =
                otherwise.
              </td>
            </tr>
            <tr>
              <td>IS_UPDATABLE</td>
              <td>
                One of: YES = the view is updatable; NO = the view is
                not updatable.
              </td>
            </tr>
          </tbody>
        </table>
      </subsection><subsection name="INFORMATION_SCHEMA.ROUTINES">
        <table>
          <thead>
            <tr>
              <th>Column name</th>
              <th>Description</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>ROUTINE_CATALOG</td>
              <td>The name of the catalog containing the routine.</td>
            </tr>
            <tr>
              <td>ROUTINE_SCHEMA</td>
              <td>The name of the schema containing the routine.</td>
            </tr>
            <tr>
              <td>ROUTINE_NAME</td>
              <td>The name of the routine.</td>
            </tr>
            <tr>
              <td>ROUTINE_BODY</td>
              <td>
                One of: SQL = the routine is an SQL routine; EXTERNAL =
                the routine is an external routine
              </td>
            </tr>
            <tr>
              <td>ROUTINE_DEFINITION</td>
              <td>
                The text of the routine definition. If it does not fit,
                the value is NULL.
              </td>
            </tr>
          </tbody>
        </table>
      </subsection><subsection name="INFORMATION_SCHEMA.TRIGGERS">
        <table>
          <thead>
            <tr>
              <th>Column name</th>
              <th>Description</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>TRIGGER_CATALOG</td>
              <td>The name of the catalog containing the trigger.</td>
            </tr>
            <tr>
              <td>TRIGGER_SCHEMA</td>
              <td>The name of the schema containing the trigger.</td>
            </tr>
            <tr>
              <td>TRIGGER_NAME</td>
              <td>The name of the trigger.</td>
            </tr>
            <tr>
              <td>EVENT_MANIPULATION</td>
              <td>
                The data manipulation event triggering execution of the
                trigger (the trigger event). One of: INSERT, DELETE,
                UPDATE
              </td>
            </tr>
            <tr>
              <td>EVENT_OBJECT_CATALOG</td>
              <td>
                The name of the catalog containing the table or view on
                which the trigger is created.
              </td>
            </tr>
            <tr>
              <td>EVENT_OBJECT_SCHEMA</td>
              <td>
                The name of the schema containing the table or view on
                which the trigger is created.
              </td>
            </tr>
            <tr>
              <td>EVENT_OBJECT_TABLE</td>
              <td>
                The name of the table or view on which the trigger is
                created.
              </td>
            </tr>
            <tr>
              <td>ACTION_ORDER</td>
              <td>
                Ordinal number for trigger execution. This number will
                define the execution order of triggers on the same table
                and with the same value for EVENT_MANIPULATION,
                ACTION_CONDITION, CONDITION_TIMING and
                ACTION_ORIENTATION. The trigger with 1 in this column
                will be executed first, followed by the trigger with 2,
                etc.
              </td>
            </tr>
            <tr>
              <td>ACTION_CONDITION</td>
              <td>
                The character representation of the search condition in
                the WHEN clause of the trigger. If the length of the
                text exceeds 400 characters, the NULL value will be
                shown.
              </td>
            </tr>
            <tr>
              <td>ACTION_STATEMENT</td>
              <td>
                The character representation of the body of the trigger.
                If the length of the text exceeds 400 characters, the
                NULL value will be shown.
              </td>
            </tr>
            <tr>
              <td>ACTION_ORIENTATION</td>
              <td>
                One of: ROW = the trigger is a row trigger; STATEMENT =
                the trigger is a statement trigger.
              </td>
            </tr>
            <tr>
              <td>CONDITION_TIMING</td>
              <td>
                One of: BEFORE = the trigger is executed before the
                triggering data manipulation operation; INSTEAD OF = the
                trigger is executed instead of the triggering data
                manipulation operation; AFTER = the trigger is executed
                after the triggering data manipulation operation.
              </td>
            </tr>
          </tbody>
        </table>
      </subsection><subsection name="INFORMATION_SCHEMA.TABLE_CONSTRAINTS">
        <table>
          <thead>
            <tr>
              <th>Column name</th>
              <th>Description</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>CONSTRAINT_CATALOG</td>
              <td>
                The name of the catalog containing the table constraint.
              </td>
            </tr>
            <tr>
              <td>CONSTRAINT_SCHEMA</td>
              <td>
                The name of the schema containing the table constraint.
              </td>
            </tr>
            <tr>
              <td>CONSTRAINT_NAME</td>
              <td>The name of the table constraint.</td>
            </tr>
            <tr>
              <td>TABLE_CATALOG</td>
              <td>
                The name of the catalog containing the table or view.
              </td>
            </tr>
            <tr>
              <td>TABLE_SCHEMA</td>
              <td>
                The name of the schema containing the table or view.
              </td>
            </tr>
            <tr>
              <td>TABLE_NAME</td>
              <td>The name of the table or view.</td>
            </tr>
            <tr>
              <td>CONSTRAINT_TYPE</td>
              <td>One of: CHECK, FOREIGN KEY, PRIMARY KEY, UNIQUE</td>
            </tr>
            <tr>
              <td>IS_DEFERRABLE</td>
              <td>
                One of: YES = the constraint is deferrable; NO = the
                constraint is not deferrable
              </td>
            </tr>
            <tr>
              <td>INITIALLY_DEFERRED</td>
              <td>
                One of: YES = the constraint is immediate; NO = the
                constraint is deferred
              </td>
            </tr>
          </tbody>
        </table>
      </subsection>
      <subsection name="INFORMATION_SCHEMA.CHECK_CONSTRAINTS">
        <table>
          <thead>
            <tr>
              <th>Column name</th>
              <th>Description</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>CONSTRAINT_CATALOG</td>
              <td>
                The name of the catalog containing the check constraint.
              </td>
            </tr>
            <tr>
              <td>CONSTRAINT_SCHEMA</td>
              <td>
                The name of the schema containing the check constraint.
              </td>
            </tr>
            <tr>
              <td>CONSTRAINT_NAME</td>
              <td>The name of the check constraint.</td>
            </tr>
            <tr>
              <td>CHECK_CLAUSE</td>
              <td>
                The search condition used in the check clause. If it
                does not fit, the value is NULL.
              </td>
            </tr>
          </tbody>
        </table>
      </subsection>
      
      
      
    </section>
  </body>
</document>