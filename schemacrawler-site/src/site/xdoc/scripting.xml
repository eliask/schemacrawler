<!DOCTYPE document PUBLIC "-//Apache Software Foundation//DTD XDOC 1.0//EN"
  "http://maven.apache.org/dtd/xdoc_1_0.dtd">
<document>
  <properties>
    <title>SchemaCrawler Database Scripting</title>
    <author email="sualeh@hotmail.com">Sualeh Fatehi</author>
  </properties>
  <body>
    <section name="SchemaCrawler Database Scripting">
      <subsection name="SchemaCrawler Database Scripting">
        <p>
          SchemaCrawler is a command-line tool that allows you to script against your database, using JavaScript, 
          <a href="http://groovy.codehaus.org/">Groovy,</a> 
          <a href="http://www.ruby-lang.org/en/">Ruby</a> or <a href="http://www.python.org/">Python</a>.
          (SchemaCrawler supports any scripting language supported on the JDK.)
          Database meta-data is provided to your script, as the "database" object, and you can use any of the API
          methods to obtain details about your schema. A live database connection is provided to your script as the
          "connection" object. You can use standard JDBC to script against the database. J2SE 6 is required for this
          functionality to work.
        </p>
        <p>
          For more details, see scripting example in the
          <a href="https://sourceforge.net/projects/schemacrawler/files/SchemaCrawler%20Examples/">SchemaCrawler examples</a>
          download, in the
            <code>examples\javascript</code>, <code>examples\groovy</code>, 
            <code>examples\ruby</code> and <code>examples\python</code>
            directories.
        </p>  
        <p>
          An hypothetical example of SchemaCrawler JavaScript support is in the following script, which attempts to drop
          all the tables in the database.
          <source><![CDATA[
var dropTables = function()
{
  println(database.schemaCrawlerInfo);
  println(database.databaseInfo);
  println(database.jdbcDriverInfo);
  var statement = connection.createStatement();
  var tables = database.tables.toArray();
  for ( var i = (tables.length - 1); i >= 0; i--)
  {
    var table = tables[i];
    var sql = "DROP " + table.type + " " + table.fullName;
    println("Executing SQL: " + sql);
    try
    {
      statement.executeUpdate(sql);
    } catch (e)
    {
      println("");
      println(e.message);
      println("(Not dropping any more tables, due to exception)");
      return;
    }
  }
};

dropTables();       
          ]]>
          </source>
        </p>
      </subsection>
    </section>
        <footer>
            <p>
            <a rel="license" href="http://creativecommons.org/licenses/by-sa/3.0/">
                <img alt="Creative Commons License" style="border-width:0"
                    src="http://i.creativecommons.org/l/by-sa/3.0/80x15.png" />
            </a>
            <br />
            <span xmlns:dc="http://purl.org/dc/elements/1.1/" href="http://purl.org/dc/dcmitype/Text"
                property="dc:title" rel="dc:type">SchemaCrawler Website
            </span>
            by
            <span xmlns:cc="http://creativecommons.org/ns#" property="cc:attributionName">Sualeh
                Fatehi
            </span>
            is licensed under a
            <a rel="license" href="http://creativecommons.org/licenses/by-sa/3.0/">Creative Commons Attribution-Share Alike
                3.0
                Unported License
            </a>
            .
            <br />
            Based on a work at
            <a xmlns:dc="http://purl.org/dc/elements/1.1/" href="http://schemacrawler.sourceforge.net/"
                rel="dc:source">
                schemacrawler.sourceforge.net
            </a>
            .
            </p>
        </footer>    
  </body>
</document>
