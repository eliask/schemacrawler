<?xml version="1.0" encoding="UTF-8"?>
<faqs xmlns="http://maven.apache.org/FML/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/FML/1.0 http://maven.apache.org/xsd/fml-1.0.xsd" title="SchemaCrawler - How-to">
	<part id="include-exclude">
		<title>Include and Exclude Stuff from the Output</title>
		<faq id="excluded-tables">
			<question>
				<b>How to see why certain tables or columns for excluded
				</b>
			</question>
			<answer>
				<p>
					Re-run SchemaCrawler with
					<code>-loglevel=ALL</code>
					on the command-line.
				</p>
			</answer>
		</faq>
		<faq id="excluded-tables-or-columns">
			<question>
				<b>How to include or exclude certain tables or columns</b>
			</question>
			<answer>
				<p>
					Change the configuration for the SchemaCrawler the table or column
					include
					and exclude patterns in the
					<code>schemacrawler.config.properties
					</code>
					file. The include or exclude specification is a
					<a href="http://java.sun.com/j2se/1.5.0/docs/api/java/util/regex/Pattern.html">
						Java regular expression
          </a>
					. The include pattern is evaluated first, and the exclusions are
					made
					from
					the included tables or columns list.
				</p>
			</answer>
		</faq>
		<faq id="excluded-views">
			<question>
				<b>How to exclude database views from the output</b>
			</question>
			<answer>
				<p>
					Change the configuration for the SchemaCrawler table types to
					<code>schemacrawler.table_types=TABLE
					</code>
					in the
					<code>schemacrawler.config.properties
					</code>
					file.
				</p>
			</answer>
		</faq>
		<faq id="excluded-procedures">
			<question>
				<b>How to exclude stored procedures from the output</b>
			</question>
			<answer>
				<p>
					Change the configuration for the SchemaCrawler stored procedures to
					<code>schemacrawler.show_stored_procedures=false
					</code>
					in the
					<code>schemacrawler.config.properties
					</code>
					file.
				</p>
			</answer>
		</faq>
	</part>
	<part id="diff-able-output">
		<title>Create diff-able Output</title>
		<faq id="sorting">
			<question>
				<b>
					How to sort columns, foreign-keys and indices alphabetically
				</b>
			</question>
			<answer>
				<p>
					Change the configuration for the SchemaCrawler "sort
					alphabetically"
					properties in the
					<code>schemacrawler.config.properties
					</code>
					file.
				</p>
			</answer>
		</faq>
		<faq id="diff-data-types">
			<question>
				<b>How to diff column data types across databases</b>
			</question>
			<answer>
				<p>
					Change the configuration for the SchemaCrawler
					<code>schemacrawler.format.show_standard_column_type_names=true
					</code>
					in the
					<code>schemacrawler.config.properties
					</code>
					file. This setting will show standard data types across different
					database
					systems. On the other hand, if you want to see the real
					database specific
					data types, change the setting to a value of
					true.
				</p>
			</answer>
		</faq>
		<faq id="ordinal-numbers">
			<question>
				<b>
					How to allow diffs of tables that have columns added in
					between
        </b>
			</question>
			<answer>
				<p>
					When columns are added into a table, they can change the column
					ordinal
					number. This can mess up the diffs. Change the
					configuration
					for the
					SchemaCrawler
					<code>schemacrawler.format.show_ordinal_numbers=false
					</code>
					in the
					<code>schemacrawler.config.properties
					</code>
					file. You can combine this setting with the setting to sort columns
					alphabetically to produce diff friendly output.
				</p>
			</answer>
		</faq>
		<faq id="index-names">
			<question>
				<b>How to hide primary key, foreign key and index names</b>
			</question>
			<answer>
				<p>
					If primary key, foreign key and index names are not explicitly
					provided
					while creating a schema, most database system assign
					default
					names. These
					names can show up as spurious diffs in
					SchemaCrawler
					output. Change the
					configuration for the following
					properties in your
					<code>schemacrawler.config.properties
					</code>
					file.
				</p>
				<source><![CDATA[
schemacrawler.format.hide_primarykey_names=false
schemacrawler.format.hide_foreignkey_names=false
schemacrawler.format.hide_index_names=false
schemacrawler.format.hide_constraint_names=false
]]></source>
			</answer>
		</faq>
	</part>
	<part id="integrations">
		<title>Integrations</title>
		<faq id="javascript">
			<question>
				<b>How to script with your database metadata</b>
			</question>
			<answer>
				<p>
					When SchemaCrawler is used with J2SE 6 and above, it has
					built-in
					support to be used with JavaScript scripts. Write a
					JavaScript file,
					assuming that a "catalog" variable containing the
					database schema
					will be available. Run
					<code>schemacrawler.tools.integration.scripting.Main
					</code>
					, with the correct options. See the example in the
					<code>examples\javascript</code>
					directory for more details.
				</p>
			</answer>
		</faq>
		<faq id="velocity">
			<question>
				<b>How to create your own output format</b>
			</question>
			<answer>
				<p>
					SchemaCrawler integrates with
					<a href="http://velocity.apache.org/">Apache Velocity</a>
					to allow for templated ouput. Put Velocity on your classpath, and
					create
					your template, and run
					<code>schemacrawler.tools.integration.velocity.Main
					</code>
					, with the correct options. See the Velocity example in the
					<code>_distrib\velocity</code>
					directory for more details.
				</p>
			</answer>
		</faq>
		<faq id="graphing">
			<question>
				<b>How to create a database diagram of your schema</b>
			</question>
			<answer>
				<p>
					SchemaCrawler integrates with
					<a href="http://www.graphviz.org/">
						Graphviz
          </a>
					to produce graph images. Install Graphviz, and run
					<code>schemacrawler.tools.integration.graph.Main
					</code>
					, with the correct options. See the graphing example in the
					<code>_distrib\graphing</code>
					directory for more details.
				</p>
			</answer>
		</faq>
	</part>
	<part id="projects">
		<title>How to Use SchemaCrawler in Projects</title>
		<faq id="api">
			<question>
				<b>How to use SchemaCrawler programmatically</b>
			</question>
			<answer>
				<p>
					Read
					<a href="http://www.devx.com/Java/Article/32443">
						Java API Makes Database Metadata as Easily Accessible as
						POJOs
          </a>
					for an introduction to the SchemaCrawler API. (This article may
					refer to an
					older release of the SchemaCrawler API, but the
					concepts
					are the same.) You
					can also browse
					the
					<a href="apidocs/index.html">javadocs</a>
					.
				</p>
				<p>
					<i>
						See the example in the
						<code>_distrib\examples\api</code>
						directory.
					</i>
				</p>
				<p>
					Or, if you are impatient, try code similar to the
					following:
					<source><![CDATA[
SchemaCrawlerOptions options = new SchemaCrawlerOptions();
Catalog catalog = 
  SchemaCrawlerUtility.getCatalog(connection, options);
for (Schema schema: catalog.getSchemas())
{
  System.out.println(schema);
  for (Table table: schema.getTables())
  {
    System.out.println("o--> " + table);
    for (Column column: table.getColumns())
    {
      System.out.println("     o--> " + column);
    }  
  }
}
]]></source>
				</p>
			</answer>
		</faq>
		<faq id="ant">
			<question>
				<b>How to use SchemaCrawler as an ant Task</b>
			</question>
			<answer>
				<p>SchemaCrawler comes with a full-featured ant task.
				</p>
				<p>
					<i>
						See the example in the
						<code>_distrib\examples\ant-task</code>
						directory.
					</i>
				</p>
				<p>
					In addition to the ant task parameters mentioned in the example,
					you
					may
					find the following parameters useful.
        </p>
				<ul>
					<li>
						<b>config</b>
						Path to the configuration file (default value -
						schemacrawler.config.properties)
					</li>
					<li>
						<b>config-override</b>
						Path to the configuration override file (default value -
						schemacrawler.config.override.properties)
					</li>
					<li>
						<b>db-driver-classpath</b>
						Database driver classpath (default value - value of the ant
						property
						value
						${db-driver-classpath})
					</li>
					<li>
						<b>datasource</b>
						Datasource defined in the configuration (either the datasource, or
						the
						connection properties should be provided - if both sets are
						provided, the
						datasource is ignored)
					</li>
					<li>
						<b>driver</b>
						JDBC driver class name
					</li>
					<li>
						<b>url</b>
						Database connection string
					</li>
					<li>
						<b>user</b>
						Database connection user name
					</li>
					<li>
						<b>password</b>
						Database connection password (default value is an empty string)
					</li>
					<li>
						<b>command</b>
						Comma-separated list of commands
					</li>
					<li>
						<b>no-header</b>
						Whether to print the header - true or false (default value -
						false)
					</li>
					<li>
						<b>no-footer</b>
						Whether to print the footer - true or false (default value -
						false)
					</li>
					<li>
						<b>no-info</b>
						Whether to print information - true or false (default value -
						false)
					</li>
					<li>
						<b>outputformat</b>
						Output format (default value - text)
					</li>
					<li>
						<b>outputfile</b>
						Path to output file
					</li>
					<li>
						<b>append</b>
						Whether to append to the output - true or false (default value -
						false)
					</li>
				</ul>
			</answer>
		</faq>
		<faq id="maven">
			<question>
				<b>How to use SchemaCrawler To Produce a Maven Report</b>
			</question>
			<answer>
				<p>
					SchemaCrawler comes with a Maven reports plug-in. You can
					generate a
					SchemaCrawler report along with other reports for your
					Maven
					generated
					site.
    </p>
				<p>
					<i>
						See the example in the
						<code>_distrib\examples\maven</code>
						directory.
					</i>
				</p>
				<p>
					Install the SchemaCrawler Maven plug-in by running the following
					command,
					and following the instructions that are printed out.
					<code><![CDATA[java -cp schemacrawler-6.3.jar schemacrawler.tools.integration.maven.Main]]></code>
				</p>
				<p>
					Next, add a section to your Maven 2.0 project's pom.xml file,
					similar
					to
					that below, changing what needs to be changed:
        </p>
				<source><![CDATA[
<reporting>
  <plugins>
    <plugin>
      <groupId>schemacrawler</groupId>
      <artifactId>schemacrawler-maven-plugin</artifactId>
      <version>4.0</version>
      <configuration>
        <schemacrawler.config>schemacrawler.config.properties</schemacrawler.config>
        <schemacrawler.datasource>hsqldb</schemacrawler.datasource>
        <schemacrawler.command>verbose_schema</schemacrawler.command>
        <schemacrawler.outputformat>html</schemacrawler.outputformat>
        <schemacrawler.jdbc.driver.classpath>hsqldb.jar</schemacrawler.jdbc.driver.classpath>
      </configuration>
    </plugin>
  </plugins>
</reporting>
]]></source>
				<p>
					Run
					<code>mvn site</code>
					. See the output produced in the
					<code>target/site</code>
					directory of your project.
				</p>
			</answer>
		</faq>
	</part>
	<part id="advanced">
		<title>Advanced SchemaCrawler Usage</title>
		<faq id="definitions">
			<question>
				<b>How to get view and procedure definitions</b>
			</question>
			<answer>
				<p>
					<i>
						See the documentation in
						<a href="INFORMATION_SCHEMA.html">INFORMATION_SCHEMA Views</a>
						.
					</i>
				</p>
			</answer>
		</faq>
		<faq id="check_constraints">
			<question>
				<b>How to obtain check constraints</b>
			</question>
			<answer>
				<p>
					<i>
						See the documentation in
						<a href="INFORMATION_SCHEMA.html">INFORMATION_SCHEMA Views</a>
						.
					</i>
				</p>
			</answer>
		</faq>
	</part>
</faqs>
