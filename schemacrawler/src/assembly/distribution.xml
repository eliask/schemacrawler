<?xml version="1.0" encoding="UTF-8"?>
<project name="schemacrawler" default="make-distribution" basedir=".">

  <property name="distribution.assembly"
            location="${SchemaCrawler.home}/schemacrawler/src/assembly" />
  <property name="distribution.target"
            location="${SchemaCrawler.home}/schemacrawler/target" />
  <property name="schemacrawler.distribution.jar"
            value="${distribution.target}/schemacrawler-${SchemaCrawler.version}.jar" />
  <property name="schemacrawler.distribution.sources.jar"
            value="${distribution.target}/schemacrawler-${SchemaCrawler.version}-sources.jar" />
  <property name="schemacrawler.distribution.javadoc.jar"
            value="${distribution.target}/schemacrawler-${SchemaCrawler.version}-javadoc.jar" />
  <property name="schemacrawler.api-tests.jar"
  	        value="${SchemaCrawler.home}/schemacrawler-api/target/schemacrawler-api-${SchemaCrawler.version}-tests.jar" />	
  <property name="schemacrawler.lint.jar"
            value="${SchemaCrawler.home}/schemacrawler-lint/target/schemacrawler-lint-${SchemaCrawler.version}.jar" />
  <available file="gpl-3.0.txt" property="available.gpl-3.0.txt"/>
  <available file="lgpl-3.0.txt" property="available.lgpl-3.0.txt"/>

  <target name="make-distribution"
          depends="
            download-licenses,
            make-super-jar,
            make-database-distributions,
            make-examples,
            make-source-distribution,
            make-website-distribution,
            cleanup-distribution
            "
          description="Package all sub-project jars into the distributable jar" />


  <target name="download-licenses" depends="download-gpl,download-lgpl"/>
  
  <target name="download-gpl" unless="available.gpl-3.0.txt">
    <get src="http://www.gnu.org/licenses/gpl-3.0.txt" dest="gpl-3.0.txt" usetimestamp="true" />    
  </target>

  <target name="download-lgpl" unless="available.lgpl-3.0.txt">
    <get src="http://www.gnu.org/licenses/lgpl-3.0.txt" dest="lgpl-3.0.txt" usetimestamp="true" />
  </target>  

  <target name="make-super-jar">

    <jar destfile="${schemacrawler.distribution.jar}" index="true">
      <manifest>
        <attribute name="Product" value="SchemaCrawler" />
        <attribute name="Version" value="${SchemaCrawler.version}" />
        <attribute name="Author" value="Sualeh Fatehi sualeh@hotmail.com" />
        <attribute name="Copyright" value="(c) 2003-2011, Sualeh Fatehi" />
        <attribute name="Main-Class" value="schemacrawler.Main" />
      </manifest>
      <zipfileset dir="${SchemaCrawler.home}/schemacrawler-api/target/classes" />
      <zipfileset dir="${SchemaCrawler.home}/schemacrawler-commandline/target/classes" />
      <zipfileset dir="${SchemaCrawler.home}/schemacrawler-tools/target/classes" />
      <zipfileset dir="${SchemaCrawler.home}/schemacrawler-integrations/target/classes" />
    </jar>

    <jar destfile="${schemacrawler.distribution.sources.jar}" index="true">
      <manifest>
        <attribute name="Product" value="SchemaCrawler" />
        <attribute name="Version" value="${SchemaCrawler.version}" />
        <attribute name="Author" value="Sualeh Fatehi sualeh@hotmail.com" />
        <attribute name="Copyright" value="(c) 2003-2011, Sualeh Fatehi" />
        <attribute name="Main-Class" value="schemacrawler.Main" />
      </manifest>
      <zipfileset src="${SchemaCrawler.home}/schemacrawler-api/target/schemacrawler-api-${SchemaCrawler.version}-sources.jar" />
      <zipfileset src="${SchemaCrawler.home}/schemacrawler-commandline/target/schemacrawler-commandline-${SchemaCrawler.version}-sources.jar" />
      <zipfileset src="${SchemaCrawler.home}/schemacrawler-tools/target/schemacrawler-tools-${SchemaCrawler.version}-sources.jar" />
      <zipfileset src="${SchemaCrawler.home}/schemacrawler-integrations/target/schemacrawler-integrations-${SchemaCrawler.version}-sources.jar" />
    </jar>

    <copy file="${SchemaCrawler.home}/schemacrawler-api/target/schemacrawler-api-${SchemaCrawler.version}-javadoc.jar"
          tofile="${schemacrawler.distribution.javadoc.jar}" />

  </target>


  <target name="make-examples">

    <property name="examples.stem"
              value="schemacrawler-${SchemaCrawler.version}-examples" />
    <property name="examples.staging.dir"
              location="${distribution.target}/${examples.stem}" />
    <delete dir="${examples.staging.dir}" />
    <mkdir dir="${examples.staging.dir}" />

  	<!-- 1. STAGE FOR EXAMPLES -->

    <!-- Copy licenses -->
    <copy file="lgpl-3.0.txt"
          tofile="${examples.staging.dir}/LICENSE.txt" />

    <!-- Stage examples -->
    <mkdir dir="${distribution.target}/site/examples" />
    <move includeEmptyDirs="true" todir="${examples.staging.dir}">
      <fileset dir="${distribution.target}/site/examples" />
    </move>
    <copy file="${SchemaCrawler.home}/schemacrawler-test/src/main/java/ApiExample.java"
          todir="${examples.staging.dir}/api" />
    <copy file="${SchemaCrawler.home}/schemacrawler-test/src/main/java/ApiExample.java"
          todir="${examples.staging.dir}/maven-project/src/main/java" />

    <!-- Copy config files -->
    <copy todir="${examples.staging.dir}/db-specific-query">
      <fileset dir="${SchemaCrawler.home}/schemacrawler-site/src/site/resources/config">
        <include name="*config*.properties" />
      </fileset>
    </copy>
    <copy todir="${examples.staging.dir}/user-defined-query">
      <fileset dir="${SchemaCrawler.home}/schemacrawler-site/src/site/resources/config">
        <include name="*config*.properties" />
      </fileset>
    </copy>
    <copy todir="${examples.staging.dir}/velocity">
      <fileset dir="${SchemaCrawler.home}/schemacrawler-site/src/site/resources/config">
        <include name="*config*.properties" />
      </fileset>
    </copy>
    <copy todir="${examples.staging.dir}/lint">
      <fileset dir="${SchemaCrawler.home}/schemacrawler-site/src/site/resources">
        <include name="schemacrawler-linter-configs.xml" />
      </fileset>
    </copy>   	
    <copy todir="${examples.staging.dir}/spring">
      <fileset dir="${SchemaCrawler.home}/schemacrawler-integrations/src/test/resources">
        <include name="*.xml" />
      </fileset>
    </copy>
  	
    <!-- Unzip the SchemaCrawler distribution for HyperSQL, for use in the examples -->
    <unzip
      src="${distribution.target}/schemacrawler-hsqldb-${SchemaCrawler.version}-distrib.zip"
      dest="${examples.staging.dir}" />
    <move file="${examples.staging.dir}/schemacrawler-hsqldb-${SchemaCrawler.version}"
          tofile="${examples.staging.dir}/_schemacrawler" />
    <copy file="${schemacrawler.api-tests.jar}"
          todir="${examples.staging.dir}/_schemacrawler/lib" />
  	
  	<!-- 2. CREATE BINARY DISTRIBUTION FROM THE STAGED EXAMPLES -->

    <!-- Create zip file for distribution -->
    <delete file="${distribution.target}/${examples.stem}.zip" />
    <zip destfile="${distribution.target}/${examples.stem}.zip">
      <zipfileset dir="${examples.staging.dir}"
                  prefix="${examples.stem}"
                  defaultexcludes="yes" />
    </zip>

  </target>


  <target name="make-source-distribution">

    <property name="source.zip.prefix"
              value="schemacrawler-${SchemaCrawler.version}-src" />
    <delete file="${distribution.target}/${source.zip.prefix}.zip" />
    <zip destfile="${distribution.target}/${source.zip.prefix}.zip">
      <zipfileset dir="${SchemaCrawler.home}"
                  prefix="${source.zip.prefix}"
                  defaultexcludes="yes">
        <exclude name="${distribution.target}" />
        <exclude name="${distribution.target}/*" />
        <exclude name="**/target" />
        <exclude name="**/target/**/*" />
        <exclude name="differencer" />
        <exclude name="differencer/**/*" />
        <exclude name="**/.*/*" />
        <exclude name="**/*.jar" />
      	<exclude name="**/*.launch" />
        <exclude name="**/*.lob" />
        <exclude name="**/*.log" />
        <exclude name="**/*.lck" />
        <exclude name="**/*.ser" />
        <exclude name="**/*.zip" />
        <exclude name="*.html" />
        <exclude name="workspace/**" />
        <exclude name="*.epf" />
		<exclude name=".git" />
		<exclude name="**/.svn" />
      </zipfileset>
    </zip>

  </target>

  <target name="make-website-distribution">

    <property name="website.location"
              location="${SchemaCrawler.home}/schemacrawler-site/target/site" />
    <property name="website.apidocs.location"
              location="${SchemaCrawler.home}/schemacrawler-api/target/apidocs" />
    <mkdir dir="${website.location}" />
    <mkdir dir="${website.apidocs.location}" />
    <property name="website.zip.prefix"
              value="schemacrawler-${SchemaCrawler.version}-website" />
    <delete file="${distribution.target}/${website.zip.prefix}.zip" />
    <zip destfile="${distribution.target}/${website.zip.prefix}.zip">
      <zipfileset dir="${website.location}"
                  prefix="${website.zip.prefix}"
                  defaultexcludes="yes">
        <include name="**/*.*" />
        <exclude name="**/apidocs/*.*" />
      </zipfileset>
      <zipfileset dir="${website.apidocs.location}"
                  prefix="${website.zip.prefix}/apidocs"
                  defaultexcludes="yes">
        <include name="**/*.*" />
      </zipfileset>
    </zip>
	
	<unzip 
		src="${distribution.target}/${website.zip.prefix}.zip" 
		dest="${distribution.target}"/>
  
  </target>

  <target name="make-database-distributions">

	<create-db-distribution database="generic" license="lgpl-3.0" />
  	<create-db-distribution database="db2" license="lgpl-3.0" />
    <create-db-distribution database="derby" license="gpl-3.0" />
    <create-db-distribution database="hsqldb" license="gpl-3.0" />
    <create-db-distribution database="mysql" license="gpl-3.0" />
    <create-db-distribution database="oracle" license="lgpl-3.0" />
    <create-db-distribution database="postgresql" license="gpl-3.0" />
    <create-db-distribution database="sqlserver" license="gpl-3.0" />
    <create-db-distribution database="sqlite" license="gpl-3.0" />
  	<create-db-distribution database="sybaseiq" license="lgpl-3.0" />

  </target>


  <target name="cleanup-distribution">

    <delete>
      <fileset dir="${distribution.target}">
        <include name="*.*" />
        <exclude name="schemacrawler*.zip" />
        <exclude name="schemacrawler*.jar" />
      </fileset>
    </delete>

  </target>


  <macrodef name="create-db-distribution">
  	
    <attribute name="database" />
  	<attribute name="license" />

    <sequential>

      <mkdir dir="${distribution.target}/@{database}-distrib" />
      <unzip
        dest="${distribution.target}/@{database}-distrib"
        src="${SchemaCrawler.home}/schemacrawler-@{database}/target/schemacrawler-@{database}-${SchemaCrawler.version}-distrib.zip" />

      <delete>
        <fileset dir="${distribution.target}/@{database}-distrib">
          <include name="**/schemacrawler-api-${SchemaCrawler.version}.jar" />
          <include name="**/schemacrawler-commandline-${SchemaCrawler.version}.jar" />
          <include name="**/schemacrawler-tools-${SchemaCrawler.version}.jar" />
          <include name="**/schemacrawler-integrations-${SchemaCrawler.version}.jar" />
          <include name="**/schemacrawler-${SchemaCrawler.version}.jar" />
        </fileset>
      </delete>

      <filter token="version" value="${SchemaCrawler.version}" />
      <filter token="package" value="schemacrawler.tools.@{database}" />
      <copy todir="${distribution.target}/@{database}-distrib/schemacrawler-@{database}-${SchemaCrawler.version}"
            filtering="true">
        <fileset dir="${distribution.assembly}">
          <include name="*.cmd" />
          <include name="*.sh" />
          <include name="*.wsf" />
        	<include name="*.txt" />
        </fileset>
      </copy>

      <copy file="@{license}.txt"
            tofile="${distribution.target}/@{database}-distrib/LICENSE.txt" />

      <zip destfile="${distribution.target}/schemacrawler-@{database}-${SchemaCrawler.version}-distrib.zip"
           update="true"
           whenempty="fail">
        <fileset dir="${distribution.target}/@{database}-distrib" />
        <zipfileset file="${schemacrawler.distribution.jar}"
                    prefix="schemacrawler-@{database}-${SchemaCrawler.version}/lib" />
        <zipfileset file="${schemacrawler.lint.jar}"
                    prefix="schemacrawler-@{database}-${SchemaCrawler.version}/lib" />      	
      </zip>

      <delete dir="${distribution.target}/@{database}-distrib" />

    </sequential>

  </macrodef>

</project>
